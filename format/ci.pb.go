// Code generated by protoc-gen-go.
// source: ci.proto
// DO NOT EDIT!

/*
Package format is a generated protocol buffer package.

It is generated from these files:
	ci.proto

It has these top-level messages:
	Jobid
	Job
	Execution
	Server
	Request
	Response
	ListRequest
	ListResponse
	LogRequest
	LogResponse
	AddRequest
	RemoveRequest
*/
package format

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type Jobid struct {
	Name             *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Remote           *string `protobuf:"bytes,2,req,name=remote" json:"remote,omitempty"`
	Branch           *string `protobuf:"bytes,3,req,name=branch" json:"branch,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Jobid) Reset()         { *m = Jobid{} }
func (m *Jobid) String() string { return proto.CompactTextString(m) }
func (*Jobid) ProtoMessage()    {}

func (m *Jobid) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Jobid) GetRemote() string {
	if m != nil && m.Remote != nil {
		return *m.Remote
	}
	return ""
}

func (m *Jobid) GetBranch() string {
	if m != nil && m.Branch != nil {
		return *m.Branch
	}
	return ""
}

type Job struct {
	Id               *Jobid     `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	Refresh          *Execution `protobuf:"bytes,4,req,name=refresh" json:"refresh,omitempty"`
	Build            *Execution `protobuf:"bytes,5,req,name=build" json:"build,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *Job) Reset()         { *m = Job{} }
func (m *Job) String() string { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()    {}

func (m *Job) GetId() *Jobid {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Job) GetRefresh() *Execution {
	if m != nil {
		return m.Refresh
	}
	return nil
}

func (m *Job) GetBuild() *Execution {
	if m != nil {
		return m.Build
	}
	return nil
}

type Execution struct {
	Version          *string `protobuf:"bytes,1,req,name=version" json:"version,omitempty"`
	Start            *int64  `protobuf:"varint,2,req,name=start" json:"start,omitempty"`
	End              *int64  `protobuf:"varint,3,req,name=end" json:"end,omitempty"`
	Errcode          *int32  `protobuf:"varint,4,req,name=errcode" json:"errcode,omitempty"`
	Result           *string `protobuf:"bytes,5,opt,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Execution) Reset()         { *m = Execution{} }
func (m *Execution) String() string { return proto.CompactTextString(m) }
func (*Execution) ProtoMessage()    {}

func (m *Execution) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *Execution) GetStart() int64 {
	if m != nil && m.Start != nil {
		return *m.Start
	}
	return 0
}

func (m *Execution) GetEnd() int64 {
	if m != nil && m.End != nil {
		return *m.End
	}
	return 0
}

func (m *Execution) GetErrcode() int32 {
	if m != nil && m.Errcode != nil {
		return *m.Errcode
	}
	return 0
}

func (m *Execution) GetResult() string {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return ""
}

type Server struct {
	Jobs             []*Job `protobuf:"bytes,1,rep,name=jobs" json:"jobs,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Server) Reset()         { *m = Server{} }
func (m *Server) String() string { return proto.CompactTextString(m) }
func (*Server) ProtoMessage()    {}

func (m *Server) GetJobs() []*Job {
	if m != nil {
		return m.Jobs
	}
	return nil
}

type Request struct {
	List             *ListRequest   `protobuf:"bytes,2,opt,name=list" json:"list,omitempty"`
	Log              *LogRequest    `protobuf:"bytes,3,opt,name=log" json:"log,omitempty"`
	Add              *AddRequest    `protobuf:"bytes,4,opt,name=add" json:"add,omitempty"`
	Remove           *RemoveRequest `protobuf:"bytes,5,opt,name=remove" json:"remove,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}

func (m *Request) GetList() *ListRequest {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *Request) GetLog() *LogRequest {
	if m != nil {
		return m.Log
	}
	return nil
}

func (m *Request) GetAdd() *AddRequest {
	if m != nil {
		return m.Add
	}
	return nil
}

func (m *Request) GetRemove() *RemoveRequest {
	if m != nil {
		return m.Remove
	}
	return nil
}

type Response struct {
	Error            *string       `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	List             *ListResponse `protobuf:"bytes,2,opt,name=list" json:"list,omitempty"`
	Log              *LogResponse  `protobuf:"bytes,3,opt,name=log" json:"log,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}

func (m *Response) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

func (m *Response) GetList() *ListResponse {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *Response) GetLog() *LogResponse {
	if m != nil {
		return m.Log
	}
	return nil
}

type ListRequest struct {
	RefreshResult    *bool  `protobuf:"varint,1,opt,name=refreshResult" json:"refreshResult,omitempty"`
	BuildResult      *bool  `protobuf:"varint,2,opt,name=buildResult" json:"buildResult,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}

func (m *ListRequest) GetRefreshResult() bool {
	if m != nil && m.RefreshResult != nil {
		return *m.RefreshResult
	}
	return false
}

func (m *ListRequest) GetBuildResult() bool {
	if m != nil && m.BuildResult != nil {
		return *m.BuildResult
	}
	return false
}

type ListResponse struct {
	Jobs             []*Job `protobuf:"bytes,1,rep,name=jobs" json:"jobs,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ListResponse) Reset()         { *m = ListResponse{} }
func (m *ListResponse) String() string { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()    {}

func (m *ListResponse) GetJobs() []*Job {
	if m != nil {
		return m.Jobs
	}
	return nil
}

type LogRequest struct {
	Jobname          *string `protobuf:"bytes,1,req,name=jobname" json:"jobname,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LogRequest) Reset()         { *m = LogRequest{} }
func (m *LogRequest) String() string { return proto.CompactTextString(m) }
func (*LogRequest) ProtoMessage()    {}

func (m *LogRequest) GetJobname() string {
	if m != nil && m.Jobname != nil {
		return *m.Jobname
	}
	return ""
}

type LogResponse struct {
	Job              *Job   `protobuf:"bytes,1,req,name=job" json:"job,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LogResponse) Reset()         { *m = LogResponse{} }
func (m *LogResponse) String() string { return proto.CompactTextString(m) }
func (*LogResponse) ProtoMessage()    {}

func (m *LogResponse) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

type AddRequest struct {
	Id               *Jobid `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AddRequest) Reset()         { *m = AddRequest{} }
func (m *AddRequest) String() string { return proto.CompactTextString(m) }
func (*AddRequest) ProtoMessage()    {}

func (m *AddRequest) GetId() *Jobid {
	if m != nil {
		return m.Id
	}
	return nil
}

type RemoveRequest struct {
	Jobname          *string `protobuf:"bytes,1,req,name=jobname" json:"jobname,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RemoveRequest) Reset()         { *m = RemoveRequest{} }
func (m *RemoveRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveRequest) ProtoMessage()    {}

func (m *RemoveRequest) GetJobname() string {
	if m != nil && m.Jobname != nil {
		return *m.Jobname
	}
	return ""
}

func init() {
}
